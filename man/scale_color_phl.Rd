% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/palette.R
\name{scale_color_phl}
\alias{scale_color_phl}
\alias{scale_fill_phl}
\title{City of Philadelphia color scales}
\usage{
scale_color_phl(..., palette = "main", discrete = T, reverse = F,
  pal_list = phl_pal_list, named = F)

scale_fill_phl(..., palette = "main", discrete = T, reverse = F,
  pal_list = phl_pal_list, named = F)
}
\arguments{
\item{...}{options passed to \code{scale_color_manual} or
\code{scale_color_gradientn}}

\item{palette}{character, which palette to use. Options are \code{"main"},
\code{"dark"}, \code{"light"}, \code{"blues"} and \code{"grays"}.}

\item{discrete}{logical, whether palette is discrete or continuous.
Continuous will interpolate between colors; discrete has a maximum number
of values.}

\item{reverse}{logical, whether to reverse the order of the palette.}

\item{pal_list}{Named list of palettes, used by palette argument. Each
element is a vector of hex codes.}

\item{named}{logical, whether the colors in the palette have names
corresponding to the data. This is usually not true.}
}
\description{
These functions provide \code{ggplot2}-compatible color and fill scales using
City of Philadelphia colors, available at
\url{https://standards.phila.gov/guidelines/design-development/brand-elements/color-palette/}.
The underlying code is adapted from \code{@drsimonj}'s tutorial at
\url{https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2}.
}
\section{Functions}{
\itemize{
\item \code{scale_color_phl}: Color scale

\item \code{scale_fill_phl}: Fill scale
}}

\examples{
library(ggplot2)
p <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +
  geom_point(size = 3)
p + scale_color_phl()

p <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Petal.Length)) +
  geom_point(size = 3)
p + scale_color_phl("blues", discrete = F)
p + scale_color_phl("blues", discrete = F, reverse = T)

p <- ggplot(iris, aes(Sepal.Width, Sepal.Length, fill = Species)) +
  geom_point(aes(size = Petal.Width), shape = 21)

p + scale_fill_phl()

p <- ggplot(iris, aes(Sepal.Width, Sepal.Length, fill = Petal.Length)) +
  geom_point(aes(size = Petal.Width), shape = 21)
p + scale_fill_phl("blues", discrete = F)
p + scale_fill_phl("blues", discrete = F, reverse = T)

}
